apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: vxlan-configurator
  labels:
    app: vxlan
spec:
  selector:
    matchLabels:
      app: vxlan
  template:
    metadata:
      labels:
        app: vxlan
    spec:
      containers:
      - name: vxlan-configurator
        image: busybox:latest
        securityContext:
          privileged: true
        volumeMounts:
        - name: host-filesystem
          mountPath: /host
        - name: host-cron
          mountPath: /etc/cron.d
        - name: host-var-log
          mountPath: /var/log
        command: ["/bin/sh", "-c"]
        args:
          - |
            #!/bin/sh

            # Create the VXLAN setup script on the host
            cat << 'EOF' > /host/usr/local/bin/vxlan-setup.sh
            #!/bin/sh

            START=4200
            END=4209
            VXLAN_PORT=4790

            i=\$START
            while [ \$i -le \$END ]; do
              VXLAN_INTERFACE="vxlan\${i}"
              VXLAN_ID=\${i}
              BRIDGE="vxbr\${i}"

              # Check if the VXLAN interface already exists
              if ip link show \${VXLAN_INTERFACE} > /dev/null 2>&1; then
                echo "\${VXLAN_INTERFACE} already exists. Skipping creation."
              else
                # Create VXLAN interface without specifying a physical device
                ip link add \${VXLAN_INTERFACE} type vxlan id \${VXLAN_ID} dstport \${VXLAN_PORT}

                # Bring up the VXLAN interface
                ip link set \${VXLAN_INTERFACE} up

                # Create a bridge if it doesn't exist and add the VXLAN interface to it
                if ! brctl show \${BRIDGE} > /dev/null 2>&1; then
                  brctl addbr \${BRIDGE}
                fi
                brctl addif \${BRIDGE} \${VXLAN_INTERFACE}

                # Bring up the bridge
                ip link set \${BRIDGE} up

                echo "VXLAN interface \${VXLAN_INTERFACE} and bridge \${BRIDGE} configured."
              fi
              i=\$(expr \$i + 1)
            done
            EOF

            # Make the script executable
            chmod +x /host/usr/local/bin/vxlan-setup.sh

            # Add the cron job to the host's crontab directory with correct format and permissions
            echo "*/5 * * * * root /usr/local/bin/vxlan-setup.sh >> /var/log/vxlan-setup.log 2>&1" > /etc/cron.d/vxlan-setup
            chmod 0644 /etc/cron.d/vxlan-setup

            # Keep the container running to avoid restarting the DaemonSet
            sleep infinity
      volumes:
      - name: host-filesystem
        hostPath:
          path: /
      - name: host-cron
        hostPath:
          path: /etc/cron.d
      - name: host-var-log
        hostPath:
          path: /var/log
